{"version":3,"sources":["Components/Statistics.jsx","Components/Section.jsx","Components/FeedbackOptions.jsx","Components/Feedback.jsx","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positiveStats","positivePercentage","randomID","Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","option","type","className","name","toLowerCase","onClick","e","Feedback","state","addFeedback","target","setState","countTotalFeedback","Object","values","reduce","acc","val","countPositiveFeedbackPercentage","percentage","Math","round","isNaN","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAoBeA,EAlBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAChCC,GAAgBC,EADgD,EAAzBA,sBAE7C,OAAO,+BACH,uCAA4BL,IAAnBM,eACT,0CAA+BL,IAAtBK,eACT,sCAA2BJ,IAAlBI,eACT,2CAAgCF,EAAhC,MAASE,eACT,wCAA6BH,MAApBG,mBCEFC,EATC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAA0B,oCACtC,6BAAKD,IACJC,MCUUC,EAXS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAEhC,OAAOD,EAAQE,KAAI,SAAAC,GACf,OAAO,yBAAyBC,KAAK,SAASC,UAAU,SAASC,KAAMH,EAAOI,cAAeC,QAAS,SAAAC,GAAOR,EAAgBQ,IAAtH,cAA8HN,IAAjHR,mBCDPe,E,4MAEnBC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPqB,YAAc,SAACH,GAAO,IACZH,EAASG,EAAEI,OAAXP,KAER,EAAKQ,SAAL,eAAiBR,EAAO,EAAKK,MAAML,GAAQ,K,EAG7CS,mBAAqB,WAEnB,OAAOC,OAAOC,OAAO,EAAKN,OAAOO,QAAO,SAACC,EAAKC,GAC5C,OAAOD,EAAMC,IACZ,I,EAGLC,gCAAkC,WAChC,IAAM7B,EAAQ,EAAKuB,qBACbO,EAAaC,KAAKC,MAAM,EAAKb,MAAMtB,KAAOG,EAAQ,KACxD,OAAOiC,MAAMH,GAAc,EAAIA,G,4CAGjC,WACE,IADO,EAEwBI,KAAKf,MAA5BtB,EAFD,EAECA,KAAMC,EAFP,EAEOA,QAASC,EAFhB,EAEgBA,IACfwB,EAAqEW,KAArEX,mBAAoBM,EAAiDK,KAAjDL,gCAAiCT,EAAgBc,KAAhBd,YAC7D,OAAQ,gCACN,cAAC,EAAD,CAASf,MAAM,sBAAf,SAAqC,cAAC,EAAD,CAAgBG,QAJvC,CAAC,OAAQ,UAAW,OAIqCC,gBAAiBW,MACxF,cAAC,EAAD,CAASf,MAAM,aAAf,SAA2D,IAA9B6B,KAAKX,qBAA6B,2BAA6B,cAAC,EAAD,CAAY1B,KAAMA,EAC5GC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,EACPrB,mBAAoB2B,a,GArCUM,aCAvBC,MAJf,WACE,OAAO,cAAC,EAAD,KCGTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.530f893f.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nimport { v4 as randomID } from 'uuid';\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    const positiveStats = positivePercentage();\r\n    return <ul>\r\n        <li key={randomID()} >Good:{good}</li>\r\n        <li key={randomID()} >Neutral:{neutral}</li>\r\n        <li key={randomID()} >Bad:{bad}</li>\r\n        <li key={randomID()} >Positive:{positiveStats}%</li>\r\n        <li key={randomID()} >Total:{total()}</li>\r\n    </ul>\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.func.isRequired,\r\n    positivePercentage: PropTypes.func.isRequired\r\n}\r\nexport default Statistics;","import PropTypes from 'prop-types'\r\n\r\nconst Section = ({ title, children }) => (<section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n</section>)\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node\r\n}\r\nexport default Section;","import PropTypes from \"prop-types\";\r\nimport { v4 as randomID } from 'uuid';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n\r\n    return options.map(option => {\r\n        return <button key={randomID()} type=\"button\" className=\"button\" name={option.toLowerCase()} onClick={e => { onLeaveFeedback(e) }}> {option}</button >\r\n    })\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired\r\n};\r\nexport default FeedbackOptions","import { Component } from 'react'\r\nimport Statistics from './Statistics'\r\nimport Section from './Section'\r\nimport FeedbackOption from './FeedbackOptions'\r\n\r\nexport default class Feedback extends Component {\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  }\r\n\r\n  addFeedback = (e) => {\r\n    const { name } = e.target\r\n\r\n    this.setState({ [name]: this.state[name] + 1 })\r\n  }\r\n\r\n  countTotalFeedback = () => {\r\n\r\n    return Object.values(this.state).reduce((acc, val) => {\r\n      return acc + val;\r\n    }, 0)\r\n  }\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const total = this.countTotalFeedback()\r\n    const percentage = Math.round(this.state.good / total * 100)\r\n    return isNaN(percentage) ? 0 : percentage;\r\n  }\r\n\r\n  render() {\r\n    const options = ['Good', 'Neutral', 'Bad']\r\n    const { good, neutral, bad } = this.state;\r\n    const { countTotalFeedback, countPositiveFeedbackPercentage, addFeedback } = this\r\n    return (<div>\r\n      <Section title=\"Leave your feedback\"><FeedbackOption options={options} onLeaveFeedback={addFeedback} /></Section >\r\n      <Section title='Statistics'>{this.countTotalFeedback() === 0 ? 'There is no feedback yet' : <Statistics good={good}\r\n        neutral={neutral}\r\n        bad={bad}\r\n        total={countTotalFeedback}\r\n        positivePercentage={countPositiveFeedbackPercentage} />}</Section >\r\n    </div>)\r\n  }\r\n}","import Feedback from './Components/Feedback';\r\nfunction App() {\r\n  return <Feedback />;\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}